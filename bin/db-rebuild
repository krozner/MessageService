#!/usr/bin/env node
"use strict";

var fs = require('fs');
var Server = require('/var/www/app/build/Server.js').Server.bootstrap();

var execute = function(file, callback) {
  console.log("Executing \x1b[33m" + file + "\x1b[0m Wait...");
  fs.readFile(file, function (err, data) {
    if (err) throw err;

    var queries = data.toString()
      .replace(/--.*\n/g, "")
      .replace(/#.*\n/g, "")
      .split(";");

    var execQuery = function() {
      if (queries.length) {
        Server.dbConnection.query(queries[0])
          .then(function() {
            queries.splice(0, 1);
            execQuery();
          })
          .catch(function(err) {
            throw err;
          })
      }
      else {
        callback();
      }
    };

    // wait for db connection
    setTimeout(function() { execQuery(); }, 500);
  });
};

var files = [
  "./src/Resources/Database/Schema/Schema.sql",
  // "./src/Resources/Database/Schema/TestDataFixtures.sql"
];

var argv = process.argv.slice(2);

if (argv[0] === "--test") {
  files.push("./src/Resources/Database/Schema/TestDataFixtures.sql");
}

if (argv[0] === "--templates") {
  var dir = "./src/Resources/Database/EmailTemplates";
  fs.readdirSync(dir)
    .forEach(function(file) {
        if (fs.existsSync(dir + "/" + file)) {
          files.push(dir + "/" + file);
        }
        else {
          console.log("File '" + file + "' doesn't exists");
        }
    });
}

var callback = function() {
    files.splice(0, 1);
    if (files.length) {
      execute(files[0], callback)
    } else {
      console.log("Done");
      process.exit();
    }
};

execute(files[0], callback);

